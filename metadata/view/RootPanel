{
    "type": "panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "container|animation": "fade",
        "designer|userClassName": "RootPanel",
        "designer|initialView": true,
        "ui": "",
        "layout": "card",
        "scrollable": false
    },
    "id": "ExtBox1-ext-gen6534",
    "designerId": "606d8c36-eba2-4141-afed-10222f16890b",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onPanelShow",
                "fn": "onPanelShow",
                "implHandler": [
                    "// Prüfe OS",
                    "var validOs = [\"iOS\",\"iPad\",\"iPhone\",\"iPod\",\"Android\"];",
                    "var osName = Ext.os.name;",
                    "var isValidOs = (validOs.indexOf(osName) != -1);",
                    "if(!isValidOs){",
                    "    Ext.Msg.alert('Device not valid', 'Sorry, you need a tablet with iOS or Android!', function(){",
                    "        // Bye",
                    "    }, this);",
                    "",
                    "    return;",
                    "}",
                    "",
                    "// Prüfe Auflösung",
                    "var minsize = [960, 440];",
                    "var width = (window.innerWidth > 0) ? window.innerWidth : screen.width;",
                    "var height = (window.innerHeight > 0) ? window.innerHeight : screen.height;",
                    "var isValidSize = (minsize[0] <= width && minsize[1] <= height);",
                    "if(!isValidSize){",
                    "    Ext.Msg.alert('Screen too small', 'Sorry, you need a tablet with a larger screen!', function(){",
                    "        // Bye",
                    "    }, this);",
                    "",
                    "    return;",
                    "}",
                    "",
                    "if(facebook.userId == 0){",
                    "    // show Login-Window",
                    "    Ext.Msg.alert('', 'Welcome!<br/>Continue to facebook login?', function(){",
                    "        document.location.href = facebook.loginUrl;",
                    "    }, this);",
                    "}else{",
                    "",
                    "    if(appState.userknown){",
                    "        // show Introduction-Window",
                    "        Ext.Msg.alert('', 'Sorry, ' + facebook.username + ' you have done this already.', function(){",
                    "            // show bye-site",
                    "        }, this);    ",
                    "    }else{",
                    "        // show Introduction-Window",
                    "        Ext.Msg.alert('', 'Hi ' + facebook.username + '! Thanks for visiting. Let\\'s start?', function(){",
                    "            this.showIntroduction(1);",
                    "        }, this);        ",
                    "    }",
                    "}"
                ],
                "name": "show"
            },
            "designerId": "4648c53c-c99d-43ed-bb3c-0df32ffda1c7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "showIntroduction",
                "fn": "showIntroduction",
                "designer|params": [
                    "step"
                ],
                "implHandler": [
                    "if(step == 1){",
                    "    Ext.Msg.alert('Introduction', 'Please hold your tablet in landscape with both hands. Use only your thumbs for interacting. Let\\'s start?', function(){",
                    "        this.showIntroduction(2);",
                    "    }, this);",
                    "}else if(step == 2){",
                    "    this.startTest();",
                    "}",
                    ""
                ]
            },
            "designerId": "fee4b2c5-9db9-40b4-91d1-1b382640cd52"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "startTest",
                "fn": "startTest",
                "implHandler": [
                    "this.doStep(0);"
                ]
            },
            "designerId": "80367159-a586-4011-8ad6-5011635281fa"
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "designerId": "2f9c75e8-15f1-4d74-8168-a6eadd7661c9",
            "masterInstanceId": "ExtBox1-ext-gen12408"
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "designerId": "1cbb446f-62f9-486d-9825-97a653c36829",
            "masterInstanceId": "ExtBox1-ext-gen2997"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "doStep",
                "fn": "doStep",
                "designer|params": [
                    "number"
                ],
                "implHandler": [
                    "",
                    "// Define Functions, used in timeline",
                    "var executeTest = function(){",
                    "    this.setActiveItem(1);",
                    "    var testpanel = this.getActiveItem();",
                    "",
                    "    var task = new Ext.util.DelayedTask(function() {",
                    "        var usermsg = 'You wrote ' + testpanel.characterCounter + ' characters and made ' + ",
                    "        testpanel.characterErrorCounter + ' mistakes.';",
                    "",
                    "        // speichere Test-Ergebnisse für späteren Upload",
                    "        if(!this.testresults){",
                    "            this.testresults = new Array();",
                    "        }",
                    "        this.testresults.push({",
                    "            'characters': testpanel.characterCounter,",
                    "            'errors': testpanel.characterErrorCounter",
                    "        });",
                    "",
                    "        Ext.Msg.alert('Well done!', usermsg, function(){",
                    "            this.doStep(++number);",
                    "        }, this);            ",
                    "    }, this);",
                    "",
                    "",
                    "    Ext.Msg.alert('Let\\'s start!', 'ready?', function(){",
                    "        task.delay(60000);",
                    "        testpanel.startTest();",
                    "    }, this);     ",
                    "};",
                    "",
                    "var setKeyboard = function(){",
                    "    this.setActiveItem(1);",
                    "    var testpanel = this.getActiveItem();",
                    "",
                    "    var keyboard = (appState.firstTest == 'a') ? new MyApp.view.Keyboard() : new MyApp.view.KeyboardFittsLaw();",
                    "    testpanel.setKeyboard(keyboard);",
                    "",
                    "    this.doStep(++number);",
                    "};   ",
                    "",
                    "var changeKeyboard = function(){",
                    "    this.setActiveItem(1);",
                    "    var testpanel = this.getActiveItem();",
                    "",
                    "    var keyboard = (appState.firstTest == 'a') ? new MyApp.view.KeyboardFittsLaw() : new MyApp.view.Keyboard();",
                    "    testpanel.setKeyboard(keyboard);     ",
                    "",
                    "    Ext.Msg.alert('Replace the Keyboard', 'Will you do it even better? Let\\'s see!', function(){",
                    "        this.doStep(++number);",
                    "    }, this);             ",
                    "};",
                    "",
                    "var uploadUsageInformation = function(){",
                    "    Ext.Msg.alert('', 'Thats all. Now we will upload your usage information.', function(){",
                    "        this.uploadData(function(response){",
                    "            this.doStep(++number);",
                    "        }, this);",
                    "    }, this);          ",
                    "};",
                    "",
                    "var postOnFacebook = function(){",
                    "    Ext.Msg.confirm('', 'Tell your friends on Facebook! Ok?', function(btn){",
                    "        if(btn == 'yes'){",
                    "            this.postOnFacebook(function(response){",
                    "                this.doStep(++number);",
                    "            }, this);",
                    "        }else{",
                    "            this.doStep(++number);",
                    "        }",
                    "    }, this)",
                    "};",
                    "",
                    "",
                    "var resultsum = function(){",
                    "    var resultsum = this.calculateSumResult();",
                    "    Ext.Msg.alert('Your overall score', 'You wrote ' + resultsum['characters'] + ' characters and made ' + resultsum['errors'] + ' mistakes within one minute.', function(){",
                    "        this.doStep(++number);",
                    "    }, this);      ",
                    "};",
                    "",
                    "var goodbye = function(){",
                    "    Ext.Msg.alert('Finished!', 'Thank you for your support! Goodbye!', function(){",
                    "        this.setActiveItem(0);",
                    "    }, this);      ",
                    "};",
                    "",
                    "// Define timeline",
                    "var timeline = [",
                    "setKeyboard,",
                    "executeTest,",
                    "executeTest,",
                    "executeTest,",
                    "changeKeyboard,",
                    "executeTest,",
                    "executeTest,",
                    "executeTest,",
                    "resultsum,",
                    "uploadUsageInformation,",
                    "postOnFacebook,",
                    "goodbye",
                    "];",
                    "",
                    "// find and execute current neccessary function",
                    "var currentFunction = timeline[number];",
                    "currentFunction.apply(this, []);"
                ]
            },
            "designerId": "4fbb5b0e-811c-44a3-b4a7-b4c524d6c650"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "uploadData",
                "fn": "uploadData",
                "designer|params": [
                    "callback",
                    "scope"
                ],
                "implHandler": [
                    "var width = (window.innerWidth > 0) ? window.innerWidth : screen.width;",
                    "var height = (window.innerHeight > 0) ? window.innerHeight : screen.height;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: 'upload.php',",
                    "    params: {",
                    "        test11Characters: this.testresults[0]['characters'],",
                    "        test11Errors: this.testresults[0]['errors'],",
                    "",
                    "        test12Characters: this.testresults[1]['characters'],",
                    "        test12Errors: this.testresults[1]['errors'],",
                    "",
                    "        test13Characters: this.testresults[2]['characters'],",
                    "        test13Errors: this.testresults[2]['errors'],",
                    "",
                    "        test21Characters: this.testresults[3]['characters'],",
                    "        test21Errors: this.testresults[3]['errors'],",
                    "",
                    "        test22Characters: this.testresults[4]['characters'],",
                    "        test22Errors: this.testresults[4]['errors'],",
                    "",
                    "        test23Characters: this.testresults[5]['characters'],",
                    "        test23Errors: this.testresults[5]['errors'],",
                    "",
                    "        screenresolution: width + 'x' + height",
                    "    },",
                    "    success: callback,",
                    "    scope: scope",
                    "});",
                    "",
                    ""
                ]
            },
            "designerId": "bbca990d-99d2-4b2e-9149-8a101cf5e8cf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "postOnFacebook",
                "fn": "postOnFacebook",
                "designer|params": [
                    "callback",
                    "scope"
                ],
                "implHandler": [
                    "var resultsum = this.calculateSumResult();",
                    "Ext.Ajax.request({",
                    "    url: 'postOnFacebook.php',",
                    "    params: resultsum,",
                    "    success: callback,",
                    "    scope: scope",
                    "});",
                    ""
                ]
            },
            "designerId": "b5e19d32-15e7-4972-b12a-6637b70a732b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "calculateSumResult",
                "fn": "calculateSumResult",
                "implHandler": [
                    "var characters = 0;",
                    "var errors = 0;",
                    "",
                    "",
                    "for(var i = 0; i<=5; i++){",
                    "    characters += this.testresults[i]['characters'];",
                    "    errors += this.testresults[i]['errors'];",
                    "}",
                    "",
                    "characters = Math.round(characters/6);",
                    "errors = Math.round(errors/6);",
                    "",
                    "",
                    "return {'characters': characters, 'errors': errors};"
                ]
            },
            "designerId": "578d4c29-b8e5-4241-b116-91cffba66a4c"
        }
    ]
}